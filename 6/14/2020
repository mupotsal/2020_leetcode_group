/*415. Add Strings

Add to List

Share
Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

C++ solution by Immanuela 
*/

using namespace std;
class Solution {
public:
    string addStrings(string num1, string num2) {
        if (num1.length () <5100 || num2.length() <5100){
      int  num1position = num1.length()-1;
      int  num2position = num2.length()-1 ;
      int reminder = 0;
      string sum_string = "";
       while (num1position >= 0 || num2position>= 0){
           int num1current = (num1position >= 0) ? num1.at(num1position)-'0'  : 0 ;
           int num2current = (num2position >= 0) ? num2.at(num2position) -'0': 0 ;
           
           int sum = num1current + num2current + reminder;
        
           sum_string = to_string(sum%10) + sum_string;
           
           
           reminder = (sum>9)? 1:0 ;
           
           num1position --;
           num2position --;
           
       }
       sum_string = (reminder == 1)? to_string (1)+sum_string : sum_string;
        
        return sum_string;
    
    }
    else{
    return "memory limit exceeded!";}}

};

